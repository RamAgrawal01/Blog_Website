{"ast":null,"code":"var _jsxFileName = \"C:\\\\WEb development\\\\New folder\\\\react_advance\\\\blog\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\n\n// Step 1: Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\n// Step 2: Create a context provider component\nfunction AppContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  // Function to fetch blog posts\n  async function fetchBlogPosts() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setLoading(true);\n    const url = `${baseUrl}?page=${page}`;\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      console.log(data);\n\n      // Update state with fetched data\n      setPage(data.page);\n      setPosts(data.posts);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      console.log(\"Error in fetching data:\", error);\n\n      // Reset state in case of an error\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    }\n    setLoading(false);\n  }\n\n  // Function to handle page changes\n  function handlePageChange(page) {\n    setPage(page);\n    fetchBlogPosts(page);\n  }\n\n  // Context value to be provided to children components\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    fetchBlogPosts,\n    handlePageChange\n  };\n\n  // Provide context value to children\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(AppContextProvider, \"9vCi9/wc4+HZ542Rv+g7w2zLxMk=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","baseUrl","jsxDEV","_jsxDEV","AppContext","AppContextProvider","_ref","_s","children","loading","setLoading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","arguments","length","undefined","url","result","fetch","data","json","console","log","error","handlePageChange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/WEb development/New folder/react_advance/blog/src/context/AppContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { baseUrl } from \"../baseUrl\";\r\n\r\n// Step 1: Create a context\r\nexport const AppContext = createContext();\r\n\r\n// Step 2: Create a context provider component\r\nfunction AppContextProvider({ children }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(null);\r\n\r\n    // Function to fetch blog posts\r\n    async function fetchBlogPosts(page = 1) {\r\n        setLoading(true);\r\n        const url = `${baseUrl}?page=${page}`;\r\n        try {\r\n            const result = await fetch(url);\r\n            const data = await result.json();\r\n            console.log(data);\r\n\r\n            // Update state with fetched data\r\n            setPage(data.page);\r\n            setPosts(data.posts);\r\n            setTotalPages(data.totalPages);\r\n        } catch (error) {\r\n            console.log(\"Error in fetching data:\", error);\r\n\r\n            // Reset state in case of an error\r\n            setPage(1);\r\n            setPosts([]);\r\n            setTotalPages(null);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    // Function to handle page changes\r\n    function handlePageChange(page) {\r\n        setPage(page);\r\n        fetchBlogPosts(page);\r\n    }\r\n\r\n    // Context value to be provided to children components\r\n    const value = {\r\n        posts,\r\n        setPosts,\r\n        loading,\r\n        setLoading,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n        setTotalPages,\r\n        fetchBlogPosts,\r\n        handlePageChange\r\n    };\r\n\r\n    // Provide context value to children\r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AppContextProvider;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;;AAEzC;AACA,SAASM,kBAAkBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,eAAeiB,cAAcA,CAAA,EAAW;IAAA,IAAVJ,IAAI,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAClCR,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMW,GAAG,GAAI,GAAEpB,OAAQ,SAAQY,IAAK,EAAC;IACrC,IAAI;MACA,MAAMS,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC/B,MAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,EAAE;MAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;;MAEjB;MACAV,OAAO,CAACU,IAAI,CAACX,IAAI,CAAC;MAClBD,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;MACpBK,aAAa,CAACQ,IAAI,CAACT,UAAU,CAAC;IAClC,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,KAAK,CAAC;;MAE7C;MACAd,OAAO,CAAC,CAAC,CAAC;MACVF,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,IAAI,CAAC;IACvB;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB;;EAEA;EACA,SAASmB,gBAAgBA,CAAChB,IAAI,EAAE;IAC5BC,OAAO,CAACD,IAAI,CAAC;IACbI,cAAc,CAACJ,IAAI,CAAC;EACxB;;EAEA;EACA,MAAMiB,KAAK,GAAG;IACVnB,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,cAAc;IACdY;EACJ,CAAC;;EAED;EACA,oBACI1B,OAAA,CAACC,UAAU,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAC7BA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAE9B;AAAC5B,EAAA,CAxDQF,kBAAkB;AAAA+B,EAAA,GAAlB/B,kBAAkB;AA0D3B,eAAeA,kBAAkB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}